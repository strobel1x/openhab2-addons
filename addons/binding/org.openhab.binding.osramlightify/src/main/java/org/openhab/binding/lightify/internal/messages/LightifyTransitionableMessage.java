/**
 * Copyright (c) 2010-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package org.openhab.binding.osramlightify.internal.messages;

import java.util.concurrent.TimeUnit;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.openhab.binding.osramlightify.handler.LightifyBridgeHandler;
import org.openhab.binding.osramlightify.handler.LightifyDeviceHandler;
import org.openhab.binding.osramlightify.internal.LightifyDeviceState;
import org.openhab.binding.osramlightify.internal.exceptions.LightifyException;
import org.openhab.binding.osramlightify.internal.exceptions.LightifyMessageTooLongException;
import org.openhab.binding.osramlightify.internal.exceptions.LightifyUnsupportedValueException;


/**
 * Extends LightifyBaseMessage to allow requests for changes to happen over a period of time.
 *
 * Message classes for transition-capable requested should extend this class.
 * A device can only have one outstanding colour transition at once and sending a
 * new transition updates the target value but NOT the time to complete. So we clip
 * this transition to the earlier completion time. When this time is reached a new
 * request will be generated by LightifyDeviceState to complete the move to the
 * desired state in whatever time remains.
 *
 * @author Mike Jagdis - Initial contribution
 */
public abstract class LightifyTransitionableMessage extends LightifyBaseMessage {

    private final Logger logger = LoggerFactory.getLogger(LightifyTransitionableMessage.class);

    protected final LightifyDeviceHandler deviceHandler;
    protected final LightifyDeviceState state;

    private Long transitionEndNanos;
    private long thisTransitionTimeNanos;

    public LightifyTransitionableMessage(LightifyDeviceHandler deviceHandler, Command command) {
        super(deviceHandler, command);

        this.deviceHandler = deviceHandler;
        state = deviceHandler.getLightifyDeviceState();
    }

    @Override
    public String toString() {
        return super.toString()
            + ", Transition = "
                + thisTransitionTimeNanos / 1000000 + "ms";
    }

    public LightifyTransitionableMessage setTransitionEndNanos(long transitionEndNanos) {
        this.transitionEndNanos = transitionEndNanos;
        return this;
    }

    protected Long getThisTransitionEndNanos() {
        long now = System.nanoTime();

        if (transitionEndNanos != null && transitionEndNanos - now > 0) {
            thisTransitionTimeNanos = transitionEndNanos - now;

            // Transitions are in tenths of a second (that's defined in the ZigBee Light Link
            // specification) so we round to the nearest tenth.
            thisTransitionTimeNanos = ((thisTransitionTimeNanos + 49999999L) / 100000000L) * 100000000L;

            // Clip to the maximum transition time.
            if (thisTransitionTimeNanos > 6553600000000L) {
                thisTransitionTimeNanos = 6553600000000L;
            }

            if (thisTransitionTimeNanos > 0) {
                return now + thisTransitionTimeNanos;
            }
        }

        thisTransitionTimeNanos = 0;
        return null;
    }

    protected long getThisTransitionTimeNanos() {
        return thisTransitionTimeNanos;
    }
}
